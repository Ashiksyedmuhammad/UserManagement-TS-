<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User List</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container my-5">
        <h1 class="text-danger mb-4">User List</h1>
        
        <!-- Add User Button -->
        <button class="btn btn-danger mb-3" data-bs-toggle="modal" data-bs-target="#addUserModal">
            Add New User
        </button>
        
        <!-- User Table -->
        <table class="table table-hover table-striped">
            <thead class="table-dark">
                <tr>
                    <th scope="col">First Name</th>
                    <th scope="col">Last Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody id="users-list">
                <% if (user && user.length > 0) { %>
                 <% user.forEach(user => { %>
                    <tr data-id="<%= user._id %>">
                        <td><%= user.first_name %></td>
                        <td><%= user.last_name %></td>
                        <td><%= user.email %></td>
                        <td><%= user.phone %></td>
                        <td>
                            <!-- Edit Button -->
                            <button class="btn btn-sm btn-outline-danger edit-btn" data-id="<%= user._id %>" data-bs-toggle="modal" data-bs-target="#editUserModal<%= user._id %>">
                                <i class="bi bi-pencil-fill"></i> Edit
                            </button>
                            <!-- Delete Button -->
                            <button class="btn btn-sm delete-btn btn-outline-danger" data-id="<%= user._id %>">
                                <i class="bi bi-trash-fill"></i> Delete
                            </button>
                        </td>
                    </tr>
                 <% }) %>
                <% } %>
                
            </tbody>
        </table>
    </div>

    <!-- Add User Modal -->
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger" id="addUserModalLabel">Add New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="add-form">
                        <div class="mb-3">
                            <label for="first-name" class="form-label">First Name</label>
                            <input type="text" name="firstname" class="form-control" id="first-name" required>
                        </div>
                        <div class="mb-3">
                            <label for="last-name" class="form-label">Last Name</label>
                            <input type="text" name="lastname" class="form-control" id="last-name" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" name="email" class="form-control" id="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="tel" name="phone" class="form-control" id="phone" required>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Add User</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <% if (user && user.length > 0) { %>
    <% user.forEach(user => { %>
    <div class="modal fade" id="editUserModal<%= user._id %>" tabindex="-1" aria-labelledby="editUserModalLabel<%= user._id %>" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger" id="editUserModalLabel<%= user._id %>">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form class="edit-form" data-user-id="<%= user._id %>">
                        <div class="mb-3">
                            <input type="hidden" class="edit-id" value="<%= user._id %>">
                            <label for="edit-firstname-<%= user._id %>" class="form-label">First Name</label>
                            <input type="text" class="form-control edit-firstname" id="edit-firstname-<%= user._id %>" value="<%= user.first_name %>" required>
                        </div>
                        <div class="mb-3">
                            <label for="edit-lastname-<%= user._id %>" class="form-label">Last Name</label>
                            <input type="text" class="form-control edit-lastname" id="edit-lastname-<%= user._id %>" value="<%= user.last_name %>" required>
                        </div>
                        <div class="mb-3">
                            <label for="edit-email-<%= user._id %>" class="form-label">Email</label>
                            <input type="email" class="form-control edit-email" id="edit-email-<%= user._id %>" value="<%= user.email %>" required>
                        </div>
                        <div class="mb-3">
                            <label for="edit-phone-<%= user._id %>" class="form-label">Phone</label>
                            <input type="tel" class="form-control edit-phone" id="edit-phone-<%= user._id %>" value="<%= user.phone %>" required>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <% }) %>
    <% } %>
    
    <!-- Bootstrap JS (with Popper.js for modal functionality) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const usersList = document.getElementById('users-list');

            // Handle Add User Form Submission
            const addForm = document.getElementById('add-form');
            addForm.addEventListener('submit', async (event) => {
                event.preventDefault();

                
                const first_name = document.getElementById('first-name').value.trim();
                const last_name = document.getElementById('last-name').value.trim();
                const email = document.getElementById('email').value.trim();
                const phone = document.getElementById('phone').value.trim();
                const data = { first_name, last_name, email, phone };

                try {
                    const response = await fetch('/users', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                    });
                    const result = await response.json();

                    if (result.success) {
                        const addUserModalElement = document.getElementById('addUserModal');
                        const addUserModal = bootstrap.Modal.getInstance(addUserModalElement);
                        addUserModal.hide();
                        
                        // Reset form
                        addForm.reset();

                        // Reload the page to show the new user
                        window.location.reload();
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });

            // Handle Delete Button Click
            usersList.addEventListener('click', (event) => {
                const button = event.target.closest('.delete-btn');
                if (button) {
                    const userId = button.getAttribute('data-id');

                    // Confirm before deleting
                    if (confirm('Are you sure you want to delete this user?')) {
                        fetch(`/user/${userId}`, {
                            method: 'DELETE',
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Remove the row from the table
                                    const rowToDelete = usersList.querySelector(`tr[data-id="${userId}"]`);
                                    rowToDelete.remove();
                                } else {
                                    console.error('Error deleting user:', data.message);
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    }
                }
            });

            // Handle Edit Form Submission
            document.querySelectorAll('.edit-form').forEach(form => {
                form.addEventListener('submit', async (event) => {
                    event.preventDefault();
                    
                    const userId = form.getAttribute('data-user-id');
                    const first_name = form.querySelector('.edit-firstname').value.trim();
                    const last_name = form.querySelector('.edit-lastname').value.trim();
                    const email = form.querySelector('.edit-email').value.trim();
                    const phone = form.querySelector('.edit-phone').value.trim();

                    const data = { first_name, last_name, email, phone };

                    try {
                        const response = await fetch(`/users/${userId}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(data),
                        });
                        const result = await response.json();

                        if (result.success) {
                            const modalElement = document.getElementById(`editUserModal${userId}`);
                            const modal = bootstrap.Modal.getInstance(modalElement);
                            modal.hide();

                            // Update the row in the table
                            const rowToUpdate = usersList.querySelector(`tr[data-id="${userId}"]`);
                            rowToUpdate.innerHTML = `
                                <td>${first_name}</td>
                                <td>${last_name}</td>
                                <td>${email}</td>
                                <td>${phone}</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-danger edit-btn" data-id="${userId}" data-bs-toggle="modal" data-bs-target="#editUserModal${userId}">
                                        <i class="bi bi-pencil-fill"></i> Edit
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${userId}">
                                        <i class="bi bi-trash-fill"></i> Delete
                                    </button>
                                </td>
                            `;
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
</body>
</html>